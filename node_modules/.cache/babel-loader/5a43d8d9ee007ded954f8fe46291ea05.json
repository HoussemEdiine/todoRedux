{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\vergo\\\\OneDrive\\\\Bureau\\\\todoredux\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport React from \"react\";\nimport { ADD_TODO, DEL_TODO } from \"../actions/action\";\nvar initialstate = [{\n  id: 1,\n  text: 'salut'\n}];\n\nvar Todoreducer = function Todoreducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialstate;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TODO:\n      return state = [].concat(_toConsumableArray(state), [{\n        id: action.id,\n        text: action.text\n      }]);\n\n    case DEL_TODO:\n      return state.fill(function (el) {\n        return el.id !== action.id;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default Todoreducer;","map":{"version":3,"sources":["C:/Users/vergo/OneDrive/Bureau/todoredux/src/reducer/todoreducer.js"],"names":["React","ADD_TODO","DEL_TODO","initialstate","id","text","Todoreducer","state","action","type","fill","el"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAmBC,QAAnB,QAAiC,mBAAjC;AAEA,IAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,EAAE,EAAE,CADgB;AAEpBC,EAAAA,IAAI,EAAG;AAFa,CAAD,CAArB;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,QAAL;AACE,aAAQM,KAAK,gCAAOA,KAAP,IAAa;AACxBH,QAAAA,EAAE,EAAGI,MAAM,CAACJ,EADY;AAExBC,QAAAA,IAAI,EAAEG,MAAM,CAACH;AAFW,OAAb,EAAb;;AAIF,SAAKH,QAAL;AACE,aAAOK,KAAK,CAACG,IAAN,CAAW,UAAAC,EAAE;AAAA,eAClBA,EAAE,CAACP,EAAH,KAAUI,MAAM,CAACJ,EADC;AAAA,OAAb,CAAP;;AAIF;AACE,aAAOG,KAAP;AAZJ;AAcD,CAfD;;AAgBA,eAAeD,WAAf","sourcesContent":["import React from \"react\";\r\nimport {ADD_TODO , DEL_TODO}from \"../actions/action\";\r\n\r\nconst initialstate = [{\r\n  id: 1 , \r\n  text : 'salut'\r\n}];\r\n\r\nconst Todoreducer = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return (state = [...state,{\r\n        id : action.id ,\r\n        text :action.text\r\n      }]);\r\n    case DEL_TODO  :\r\n      return state.fill(el =>\r\n        el.id !== action.id\r\n        )\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default Todoreducer;\r\n"]},"metadata":{},"sourceType":"module"}